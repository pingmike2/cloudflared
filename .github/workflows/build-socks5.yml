name: Build and Release cloudflared without tag

on:
  workflow_dispatch:
    inputs:
      release_name:
        description: 'Release name, e.g. cloudflared-socks5-latest'
        required: true
        default: 'cloudflared-socks5-latest'
      version:
        description: 'Version, e.g. 1.0.0-socks5'
        required: true
        default: '1.0.0-socks5'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout fork master
      - name: Checkout fork master
        uses: actions/checkout@v4
        with:
          ref: master
          fetch-depth: 0

      # 2️⃣ Add upstream and fetch PR #1020
      - name: Add upstream and fetch PR #1020
        run: |
          git remote add upstream https://github.com/cloudflare/cloudflared.git
          git fetch upstream 0ff20abdcd4678914c1d62a44a667b449b3b7fd9
          git checkout -b pr-1020 FETCH_HEAD

      # 3️⃣ Configure git identity
      - name: Configure git identity
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      # 4️⃣ Merge PR #1020 into master
      - name: Merge PR #1020
        run: |
          git checkout master
          git merge --no-ff pr-1020 -m "Merge PR #1020: HTTP2 tunnel SOCKS5 support"

      # 5️⃣ Setup Go
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      # 6️⃣ Build cloudflared
      - name: Build cloudflared
        run: |
          make cloudflared
          mkdir -p output
          cp ./cloudflared output/cloudflared

      # 7️⃣ Create GitHub Release and Upload Binary
      - name: Create GitHub Release and Upload Binary
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: cloudflared v${{ github.event.inputs.version }} (SOCKS5)
          body: "cloudflared compiled with SOCKS5 support (merged PR #1020)"
          generate_release_notes: true
          files: output/cloudflared
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}